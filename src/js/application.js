Opal.modules["authentication/login_form"] = function(Opal) {/* Generated by Opal 1.8.2 */
  var $send = Opal.send, $truthy = Opal.truthy, self = Opal.top, $nesting = [], $$ = Opal.$r($nesting), nil = Opal.nil, form = nil, email_box = nil, email_text = nil, password_box = nil, password_text = nil, connection = nil, creation = nil;

  Opal.add_stubs('box,color,text,touch,calculate_sha,data,message,empty?,strip,nil?,puts');
  
  form = self.$box((new Map([["width", 500], ["height", 350], ["left", 550], ["top", 200], ["color", "green"], ["border", (new Map([["thickness", 2], ["color", self.$color("blue")], ["pattern", "solid"]]))]])));
  email_box = form.$box((new Map([["data", "hello"], ["width", 400], ["height", 50], ["left", 50], ["top", 50], ["color", "white"], ["border", (new Map([["thickness", 1], ["color", self.$color("black")], ["pattern", "solid"]]))], ["id", "email_box"]])));
  email_text = email_box.$text((new Map([["data", "Email"], ["left", 25], ["color", "black"], ["edit", true], ["id", "email_text_id"]])));
  password_box = form.$box((new Map([["width", 400], ["height", 50], ["left", 50], ["top", 150], ["color", "white"], ["border", (new Map([["thickness", 1], ["color", self.$color("black")], ["pattern", "solid"]]))], ["id", "password"]])));
  password_text = password_box.$text((new Map([["data", "Password"], ["left", 25], ["edit", true], ["color", "black"], ["id", "password_text_id"]])));
  connection = form.$box((new Map([["width", 100], ["height", 50], ["left", 50], ["top", 250], ["color", "blue"], ["border", (new Map([["thickness", 1], ["color", self.$color("black")], ["pattern", "solid"]]))], ["text", (new Map([["data", "Se connecter"], ["left", 10], ["color", "black"]]))], ["id", "connection_btn"]])));
  $send(connection, 'touch', [true], function $$1(){var hashed_password = nil;

    
    hashed_password = $$('A').$calculate_sha(password_text.$data());
    return $$('A').$message((new Map([["action", "authentification"], ["value", (new Map([["mail", email_text.$data()], ["pass", hashed_password]]))]])));});
  creation = form.$box((new Map([["width", 110], ["height", 50], ["left", 340], ["top", 250], ["color", "yellow"], ["border", (new Map([["thickness", 1], ["color", self.$color("black")], ["pattern", "solid"]]))], ["text", (new Map([["data", "Crer un compte"], ["left", 10], ["color", "black"]]))], ["id", "creation_btn"]])));
  return $send(creation, 'touch', [true], function $$2(){var self = $$2.$$s == null ? this : $$2.$$s, hashed_password = nil;

    if ((($truthy(email_text.$data()['$nil?']()) || ($truthy(email_text.$data().$strip()['$empty?']()))) && (($truthy(password_text.$data()['$nil?']()) || ($truthy(password_text.$data().$strip()['$empty?']())))))) {
      return self.$puts("Veuillez renseigner votre adresse email et votre mot de passe.")
    } else if (($truthy(email_text.$data()['$nil?']()) || ($truthy(email_text.$data().$strip()['$empty?']())))) {
      return self.$puts("Veuillez renseigner votre adresse email.")
    } else if (($truthy(password_text.$data()['$nil?']()) || ($truthy(password_text.$data().$strip()['$empty?']())))) {
      return self.$puts("Veuillez renseigner votre mot de passe.")
    } else {
      
      hashed_password = $$('A').$calculate_sha(password_text.$data());
      return $$('A').$message((new Map([["action", "account_creation"], ["value", (new Map([["mail", email_text.$data()], ["pass", hashed_password]]))]])));
    }}, {$$s: self});
};

Opal.queue(function(Opal) {/* Generated by Opal 1.8.2 */
  var $send = Opal.send, self = Opal.top, nil = Opal.nil, c = nil;

  Opal.add_stubs('require,box,touch,message');
  
  self.$require("authentication/login_form");
  c = self.$box((new Map([["color", "yellow"], ["left", 333]])));
  return $send(c, 'touch', [true], function $$1(){
    return c.$message("****************************************")});
});
